version: "3.5"

services:

  nginx:
    restart: unless-stopped
    shm_size: '4gb'
    hostname: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_nginx"
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_nginx"
    env_file:
      - .env
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/vhosts:/etc/nginx/vhosts
      - ./:/var/www/html:rw
      - ./var:/dev/shm/var:rw
    ports:
      - "${NGINX_PORT}:80"
    links:
      - app
    networks:
      - "${CONTAINER_NAME}_network"

  app:
    shm_size: '2gb'
    hostname: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_app"
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_app"
    env_file:
      - .env
    build:
      context: docker/app
      dockerfile: Dockerfile
      args:
        - LOCAL_UID
        - LOCAL_GID
        - APP_USER
        - APP_GROUP
    volumes:
      - ./:/var/www/html:rw
      - ./var:/dev/shm/var:rw
      - ./docker/app/php.overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    links:
      - postgres
    networks:
      - "${CONTAINER_NAME}_network"

  cli:
    shm_size: '1gb'
    hostname: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_postgres"
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_cli"
    env_file:
      - .env
    build:
      context: docker/app
      dockerfile: Dockerfile
      args:
        - LOCAL_UID
        - LOCAL_GID
        - APP_USER
        - APP_GROUP
    volumes:
      - ./:/var/www/html:rw
      - ./docker/app/php.overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    links:
      - postgres
    networks:
      - "${CONTAINER_NAME}_network"

  postgres:
    env_file:
      - .env
    hostname: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_postgres"
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_postgres"
    build:
      context: docker/postgres
      dockerfile: Dockerfile
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgre/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: "/var/lib/postgre/data/pgdata"
    networks:
      - "${CONTAINER_NAME}_network"

  pgadmin:
    hostname: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_postgres"
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_pgadmin"
    restart: always
    build:
      context: docker/pgadmin
      dockerfile: Dockerfile
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=True
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin/data
    networks:
      - "${CONTAINER_NAME}_network"

volumes:
  app:
    driver: local
  pgdata:
    driver: local
  pgadmin:
    driver: local
  nginx:
    driver: local

networks:
  srt_network:
    driver: bridge
    external: true